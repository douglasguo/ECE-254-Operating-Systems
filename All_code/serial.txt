; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -oserial.o --asm_dir=.\ --list_dir=.\ --depend=serial.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Software\Keil\ARM\CMSIS\Include -IC:\Software\Keil\ARM\INC\NXP\LPC17xx --omf_browse=serial.crf src\Serial.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SER_init PROC
;;;21      *----------------------------------------------------------------------------*/
;;;22     void SER_init (int uart) {
000000  4601              MOV      r1,r0
;;;23       LPC_UART_TypeDef *pUart;
;;;24        
;;;25       if (uart == 0) {                               /* UART0 */
000002  b961              CBNZ     r1,|L1.30|
;;;26         LPC_PINCON->PINSEL0 |= (1 << 4);             /* Pin P0.2 used as TXD0 (Com0) */
000004  4a30              LDR      r2,|L1.200|
000006  6812              LDR      r2,[r2,#0]
000008  f0420210          ORR      r2,r2,#0x10
00000c  4b2e              LDR      r3,|L1.200|
00000e  601a              STR      r2,[r3,#0]
;;;27         LPC_PINCON->PINSEL0 |= (1 << 6);             /* Pin P0.3 used as RXD0 (Com0) */
000010  461a              MOV      r2,r3
000012  6812              LDR      r2,[r2,#0]
000014  f0420240          ORR      r2,r2,#0x40
000018  601a              STR      r2,[r3,#0]
;;;28     
;;;29         pUart = (LPC_UART_TypeDef *)LPC_UART0;
00001a  482c              LDR      r0,|L1.204|
00001c  e00b              B        |L1.54|
                  |L1.30|
;;;30       } else {                                       /* UART1 */
;;;31         LPC_PINCON->PINSEL4 |= (2 << 0);             /* Pin P2.0 used as TXD1 (Com1) */
00001e  4a2a              LDR      r2,|L1.200|
000020  6912              LDR      r2,[r2,#0x10]
000022  f0420202          ORR      r2,r2,#2
000026  4b28              LDR      r3,|L1.200|
000028  611a              STR      r2,[r3,#0x10]
;;;32         LPC_PINCON->PINSEL4 |= (2 << 2);             /* Pin P2.1 used as RXD1 (Com1) */
00002a  461a              MOV      r2,r3
00002c  6912              LDR      r2,[r2,#0x10]
00002e  f0420208          ORR      r2,r2,#8
000032  611a              STR      r2,[r3,#0x10]
;;;33     
;;;34         pUart = (LPC_UART_TypeDef *)LPC_UART1;
000034  4826              LDR      r0,|L1.208|
                  |L1.54|
;;;35       }
;;;36     
;;;37       pUart->LCR    = 0x83;                          /* 8 bits, no Parity, 1 Stop bit  */
000036  f04f0283          MOV      r2,#0x83
00003a  7302              STRB     r2,[r0,#0xc]
;;;38     //  pUart->DLL    = 6;                             /* 115200 Baud Rate @ 18.0 MHZ PCLK */
;;;39     //  pUart->FDR    = 0x85;                          /* FR = 1,627  DIVADDVAL = 5, MULVAL = 8 */
;;;40       pUart->DLL    = 9;                             /* 115200 Baud Rate @ 25.0 MHZ PCLK */
00003c  f04f0209          MOV      r2,#9
000040  7002              STRB     r2,[r0,#0]
;;;41       pUart->FDR    = 0x21;                          /* FR 1,507, DIVADDVAL = 1, MULVAL = 2 */
000042  f04f0221          MOV      r2,#0x21
000046  f8802028          STRB     r2,[r0,#0x28]
;;;42       pUart->DLM    = 0;                             /* High divisor latch = 0         */
00004a  f04f0200          MOV      r2,#0
00004e  7102              STRB     r2,[r0,#4]
;;;43       pUart->LCR    = 0x03;                          /* DLAB = 0                       */
000050  f04f0203          MOV      r2,#3
000054  7302              STRB     r2,[r0,#0xc]
;;;44     }
000056  4770              BX       lr
;;;45     
                          ENDP

                  SER_putChar PROC
;;;49      *----------------------------------------------------------------------------*/
;;;50     int SER_putChar (int uart, int c) {
000058  4602              MOV      r2,r0
;;;51       LPC_UART_TypeDef *pUart;
;;;52     
;;;53       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
00005a  b90a              CBNZ     r2,|L1.96|
00005c  481b              LDR      r0,|L1.204|
00005e  e000              B        |L1.98|
                  |L1.96|
000060  481b              LDR      r0,|L1.208|
                  |L1.98|
000062  4603              MOV      r3,r0
;;;54       while (!(pUart->LSR & 0x20));
000064  bf00              NOP      
                  |L1.102|
000066  7d18              LDRB     r0,[r3,#0x14]
000068  f0100f20          TST      r0,#0x20
00006c  d0fb              BEQ      |L1.102|
;;;55       return (pUart->THR = c);
00006e  b2c8              UXTB     r0,r1
000070  7018              STRB     r0,[r3,#0]
;;;56     }
000072  4770              BX       lr
;;;57     
                          ENDP

                  SER_getChar PROC
;;;61      *----------------------------------------------------------------------------*/
;;;62     int SER_getChar (int uart) {
000074  4601              MOV      r1,r0
;;;63       LPC_UART_TypeDef *pUart;
;;;64     
;;;65       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
000076  b909              CBNZ     r1,|L1.124|
000078  4814              LDR      r0,|L1.204|
00007a  e000              B        |L1.126|
                  |L1.124|
00007c  4814              LDR      r0,|L1.208|
                  |L1.126|
00007e  4602              MOV      r2,r0
;;;66       while (!(pUart->LSR & 0x01));
000080  bf00              NOP      
                  |L1.130|
000082  7d10              LDRB     r0,[r2,#0x14]
000084  f0100f01          TST      r0,#1
000088  d0fb              BEQ      |L1.130|
;;;67       return (pUart->RBR);
00008a  7810              LDRB     r0,[r2,#0]
;;;68     }
00008c  4770              BX       lr
;;;69     
                          ENDP

                  SER_getChar_nb PROC
;;;73      *----------------------------------------------------------------------------*/
;;;74     int SER_getChar_nb (int uart) {
00008e  4601              MOV      r1,r0
;;;75       LPC_UART_TypeDef *pUart;
;;;76     
;;;77       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
000090  b909              CBNZ     r1,|L1.150|
000092  480e              LDR      r0,|L1.204|
000094  e000              B        |L1.152|
                  |L1.150|
000096  480e              LDR      r0,|L1.208|
                  |L1.152|
000098  4602              MOV      r2,r0
;;;78       if (pUart->LSR & 0x01)
00009a  7d10              LDRB     r0,[r2,#0x14]
00009c  f0100f01          TST      r0,#1
0000a0  d001              BEQ      |L1.166|
;;;79         return (pUart->RBR);
0000a2  7810              LDRB     r0,[r2,#0]
                  |L1.164|
;;;80       else
;;;81         return 0;
;;;82     }
0000a4  4770              BX       lr
                  |L1.166|
0000a6  2000              MOVS     r0,#0                 ;81
0000a8  e7fc              B        |L1.164|
;;;83     
                          ENDP

                  SER_putString PROC
;;;87      *----------------------------------------------------------------------------*/
;;;88     void SER_putString (int uart, unsigned char *s) {
0000aa  b530              PUSH     {r4,r5,lr}
0000ac  4605              MOV      r5,r0
0000ae  460c              MOV      r4,r1
;;;89     
;;;90       while (*s != 0) {
0000b0  e006              B        |L1.192|
                  |L1.178|
;;;91        SER_putChar(uart, *s++);
0000b2  7822              LDRB     r2,[r4,#0]
0000b4  1c60              ADDS     r0,r4,#1
0000b6  4604              MOV      r4,r0
0000b8  4611              MOV      r1,r2
0000ba  4628              MOV      r0,r5
0000bc  f7fffffe          BL       SER_putChar
                  |L1.192|
0000c0  7820              LDRB     r0,[r4,#0]            ;90
0000c2  2800              CMP      r0,#0                 ;90
0000c4  d1f5              BNE      |L1.178|
;;;92       }
;;;93     }
0000c6  bd30              POP      {r4,r5,pc}
                          ENDP

                  |L1.200|
                          DCD      0x4002c000
                  |L1.204|
                          DCD      0x4000c000
                  |L1.208|
                          DCD      0x40010000

;*** Start embedded assembler ***

#line 1 "src\\Serial.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_Serial_c_SER_init____REV16|
#line 112 "C:\\Software\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_Serial_c_SER_init____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_Serial_c_SER_init____REVSH|
#line 130
|__asm___8_Serial_c_SER_init____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
