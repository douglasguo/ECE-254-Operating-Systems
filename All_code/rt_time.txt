; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -ort_time.o --asm_dir=.\ --list_dir=.\ --depend=rt_time.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Software\Keil\ARM\CMSIS\Include -IC:\Software\Keil\ARM\INC\NXP\LPC17xx --omf_browse=rt_time.crf rtx_src\rt_Time.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rt_dly_wait PROC
;;;31     
;;;32     void rt_dly_wait (U16 delay_time) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;33       /* Delay task by "delay_time" */
;;;34       rt_block (delay_time, WAIT_DLY);
000004  f04f0103          MOV      r1,#3
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       rt_block
;;;35     }
00000e  bd10              POP      {r4,pc}
;;;36     
                          ENDP

                  rt_itv_set PROC
;;;39     
;;;40     void rt_itv_set (U16 interval_time) {
000010  4912              LDR      r1,|L1.92|
;;;41       /* Set interval length and define start of first interval */
;;;42       os_tsk.run->interval_time = interval_time;
000012  6809              LDR      r1,[r1,#0]  ; os_tsk
000014  82c8              STRH     r0,[r1,#0x16]
;;;43       os_tsk.run->delta_time = interval_time + os_time;
000016  4912              LDR      r1,|L1.96|
000018  8809              LDRH     r1,[r1,#0]  ; os_time
00001a  4401              ADD      r1,r1,r0
00001c  4a0f              LDR      r2,|L1.92|
00001e  6812              LDR      r2,[r2,#0]  ; os_tsk
000020  8291              STRH     r1,[r2,#0x14]
;;;44     }
000022  4770              BX       lr
;;;45     
                          ENDP

                  rt_itv_wait PROC
;;;48     
;;;49     void rt_itv_wait (void) {
000024  b510              PUSH     {r4,lr}
;;;50       /* Wait for interval end and define start of next one */
;;;51       U16 delta;
;;;52     
;;;53       delta = os_tsk.run->delta_time - os_time;
000026  480d              LDR      r0,|L1.92|
000028  6800              LDR      r0,[r0,#0]  ; os_tsk
00002a  8a80              LDRH     r0,[r0,#0x14]
00002c  490c              LDR      r1,|L1.96|
00002e  8809              LDRH     r1,[r1,#0]  ; os_time
000030  eba00001          SUB      r0,r0,r1
000034  b280              UXTH     r0,r0
000036  4604              MOV      r4,r0
;;;54       os_tsk.run->delta_time += os_tsk.run->interval_time;
000038  4808              LDR      r0,|L1.92|
00003a  6800              LDR      r0,[r0,#0]  ; os_tsk
00003c  8a80              LDRH     r0,[r0,#0x14]
00003e  4907              LDR      r1,|L1.92|
000040  6809              LDR      r1,[r1,#0]  ; os_tsk
000042  8ac9              LDRH     r1,[r1,#0x16]
000044  4408              ADD      r0,r0,r1
000046  4905              LDR      r1,|L1.92|
000048  6809              LDR      r1,[r1,#0]  ; os_tsk
00004a  8288              STRH     r0,[r1,#0x14]
;;;55       if ((delta & 0x8000) == 0) {
00004c  f4144f00          TST      r4,#0x8000
000050  d103              BNE      |L1.90|
;;;56         rt_block (delta, WAIT_ITV);
000052  2104              MOVS     r1,#4
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       rt_block
                  |L1.90|
;;;57       }
;;;58     }
00005a  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  |L1.92|
                          DCD      os_tsk
                  |L1.96|
                          DCD      os_time

                          AREA ||.data||, DATA, ALIGN=1

                  os_time
000000  0000              DCB      0x00,0x00
