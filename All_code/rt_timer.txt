; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -ort_timer.o --asm_dir=.\ --list_dir=.\ --depend=rt_timer.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Software\Keil\ARM\CMSIS\Include -IC:\Software\Keil\ARM\INC\NXP\LPC17xx --omf_browse=rt_timer.crf rtx_src\rt_Timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rt_tmr_tick PROC
;;;30     
;;;31     void rt_tmr_tick (void) {
000000  b510              PUSH     {r4,lr}
;;;32       /* Decrement delta count of timer list head. Timers having the value of   */
;;;33       /* zero are removed from the list and the callback function is called.    */
;;;34       P_TMR p;
;;;35     
;;;36       if (os_tmr.next == NULL) {
000002  4837              LDR      r0,|L1.224|
000004  6800              LDR      r0,[r0,#0]  ; os_tmr
000006  b900              CBNZ     r0,|L1.10|
                  |L1.8|
;;;37         return;
;;;38       }
;;;39       os_tmr.tcnt--;
;;;40       while (os_tmr.tcnt == 0 && (p = os_tmr.next) != NULL) {
;;;41         /* Call a user provided function to handle an elapsed timer */
;;;42         os_tmr_call (p->info);
;;;43         os_tmr.tcnt = p->tcnt;
;;;44         os_tmr.next = p->next;
;;;45         rt_free_box ((U32 *)m_tmr, p);
;;;46       }
;;;47     }
000008  bd10              POP      {r4,pc}
                  |L1.10|
00000a  4835              LDR      r0,|L1.224|
00000c  8880              LDRH     r0,[r0,#4]            ;39  ; os_tmr
00000e  f1a00001          SUB      r0,r0,#1              ;39
000012  4933              LDR      r1,|L1.224|
000014  8088              STRH     r0,[r1,#4]            ;39
000016  e00d              B        |L1.52|
                  |L1.24|
000018  88e1              LDRH     r1,[r4,#6]            ;42
00001a  4608              MOV      r0,r1                 ;42
00001c  f7fffffe          BL       os_tmr_call
000020  88a0              LDRH     r0,[r4,#4]            ;43
000022  492f              LDR      r1,|L1.224|
000024  8088              STRH     r0,[r1,#4]            ;43
000026  6820              LDR      r0,[r4,#0]            ;44
000028  6008              STR      r0,[r1,#0]            ;44  ; os_tmr
00002a  4621              MOV      r1,r4                 ;45
00002c  482d              LDR      r0,|L1.228|
00002e  6800              LDR      r0,[r0,#0]            ;45  ; m_tmr
000030  f7fffffe          BL       rt_free_box
                  |L1.52|
000034  482a              LDR      r0,|L1.224|
000036  8880              LDRH     r0,[r0,#4]            ;40  ; os_tmr
000038  b918              CBNZ     r0,|L1.66|
00003a  4829              LDR      r0,|L1.224|
00003c  6804              LDR      r4,[r0,#0]            ;40  ; os_tmr
00003e  2c00              CMP      r4,#0                 ;40
000040  d1ea              BNE      |L1.24|
                  |L1.66|
000042  bf00              NOP      
000044  e7e0              B        |L1.8|
;;;48     
                          ENDP

                  rt_tmr_create PROC
;;;50     
;;;51     OS_ID rt_tmr_create (U16 tcnt, U16 info)  {
000046  e92d47f0          PUSH     {r4-r10,lr}
00004a  4607              MOV      r7,r0
00004c  4689              MOV      r9,r1
;;;52       /* Create an user timer and put it into the chained timer list using      */
;;;53       /* a timeout count value of "tcnt". User parameter "info" is used as a    */
;;;54       /* parameter for the user provided callback function "os_tmr_call ()".    */
;;;55       P_TMR p_tmr, p;
;;;56       U32 delta,itcnt = tcnt;
00004e  46b8              MOV      r8,r7
;;;57     
;;;58       if (tcnt == 0 || m_tmr == NULL)  {
000050  b117              CBZ      r7,|L1.88|
000052  4824              LDR      r0,|L1.228|
000054  6800              LDR      r0,[r0,#0]  ; m_tmr
000056  b910              CBNZ     r0,|L1.94|
                  |L1.88|
;;;59         return (NULL);
000058  2000              MOVS     r0,#0
                  |L1.90|
;;;60       }
;;;61       p_tmr = rt_alloc_box ((U32 *)m_tmr);
;;;62       if (!p_tmr)  {
;;;63         return (NULL);
;;;64       }
;;;65       p_tmr->info = info;
;;;66       p = (P_TMR)&os_tmr;
;;;67       delta = p->tcnt;
;;;68       while (delta < itcnt && p->next != NULL) {
;;;69         p = p->next;
;;;70         delta += p->tcnt;
;;;71       }
;;;72       /* Right place found, insert timer into the list */
;;;73       p_tmr->next = p->next;
;;;74       p_tmr->tcnt = (U16)(delta - itcnt);
;;;75       p->next = p_tmr;
;;;76       p->tcnt -= p_tmr->tcnt;
;;;77       return (p_tmr);
;;;78     }
00005a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.94|
00005e  4821              LDR      r0,|L1.228|
000060  6800              LDR      r0,[r0,#0]            ;61  ; m_tmr
000062  f7fffffe          BL       rt_alloc_box
000066  4605              MOV      r5,r0                 ;61
000068  b90d              CBNZ     r5,|L1.110|
00006a  2000              MOVS     r0,#0                 ;63
00006c  e7f5              B        |L1.90|
                  |L1.110|
00006e  f8a59006          STRH     r9,[r5,#6]            ;65
000072  4c1b              LDR      r4,|L1.224|
000074  88a6              LDRH     r6,[r4,#4]            ;67
000076  e004              B        |L1.130|
                  |L1.120|
000078  6820              LDR      r0,[r4,#0]            ;69
00007a  4604              MOV      r4,r0                 ;69
00007c  88a0              LDRH     r0,[r4,#4]            ;70
00007e  4430              ADD      r0,r0,r6              ;70
000080  4606              MOV      r6,r0                 ;70
                  |L1.130|
000082  4546              CMP      r6,r8                 ;68
000084  d202              BCS      |L1.140|
000086  6820              LDR      r0,[r4,#0]            ;68
000088  2800              CMP      r0,#0                 ;68
00008a  d1f5              BNE      |L1.120|
                  |L1.140|
00008c  6820              LDR      r0,[r4,#0]            ;73
00008e  6028              STR      r0,[r5,#0]            ;73
000090  eba60008          SUB      r0,r6,r8              ;74
000094  80a8              STRH     r0,[r5,#4]            ;74
000096  6025              STR      r5,[r4,#0]            ;75
000098  88a0              LDRH     r0,[r4,#4]            ;76
00009a  88a9              LDRH     r1,[r5,#4]            ;76
00009c  eba00001          SUB      r0,r0,r1              ;76
0000a0  80a0              STRH     r0,[r4,#4]            ;76
0000a2  4628              MOV      r0,r5                 ;77
0000a4  e7d9              B        |L1.90|
;;;79     
                          ENDP

                  rt_tmr_kill PROC
;;;81     
;;;82     OS_ID rt_tmr_kill (OS_ID timer)  {
0000a6  b570              PUSH     {r4-r6,lr}
0000a8  4606              MOV      r6,r0
;;;83       /* Remove user timer from the chained timer list. */
;;;84       P_TMR p, p_tmr;
;;;85     
;;;86       p_tmr = (P_TMR)timer;
0000aa  4635              MOV      r5,r6
;;;87       p = (P_TMR)&os_tmr;
0000ac  480c              LDR      r0,|L1.224|
0000ae  4604              MOV      r4,r0
;;;88       /* Search timer list for requested timer */
;;;89       while (p->next != p_tmr)  {
0000b0  e005              B        |L1.190|
                  |L1.178|
;;;90         if (p->next == NULL) {
0000b2  6820              LDR      r0,[r4,#0]
0000b4  b908              CBNZ     r0,|L1.186|
;;;91           /* Failed, "timer" is not in the timer list */
;;;92           return (p_tmr);
0000b6  4628              MOV      r0,r5
                  |L1.184|
;;;93         }
;;;94         p = p->next;
;;;95       }
;;;96       /* Timer was found, remove it from the list */
;;;97       p->next = p_tmr->next;
;;;98       p->tcnt += p_tmr->tcnt;
;;;99       rt_free_box ((U32 *)m_tmr, p_tmr);
;;;100      /* Timer killed */
;;;101      return (NULL);
;;;102    }
0000b8  bd70              POP      {r4-r6,pc}
                  |L1.186|
0000ba  6820              LDR      r0,[r4,#0]            ;94
0000bc  4604              MOV      r4,r0                 ;94
                  |L1.190|
0000be  6820              LDR      r0,[r4,#0]            ;89
0000c0  42a8              CMP      r0,r5                 ;89
0000c2  d1f6              BNE      |L1.178|
0000c4  6828              LDR      r0,[r5,#0]            ;97
0000c6  6020              STR      r0,[r4,#0]            ;97
0000c8  88a0              LDRH     r0,[r4,#4]            ;98
0000ca  88a9              LDRH     r1,[r5,#4]            ;98
0000cc  4408              ADD      r0,r0,r1              ;98
0000ce  80a0              STRH     r0,[r4,#4]            ;98
0000d0  4629              MOV      r1,r5                 ;99
0000d2  4804              LDR      r0,|L1.228|
0000d4  6800              LDR      r0,[r0,#0]            ;99  ; m_tmr
0000d6  f7fffffe          BL       rt_free_box
0000da  2000              MOVS     r0,#0                 ;101
0000dc  e7ec              B        |L1.184|
;;;103    
                          ENDP

0000de  0000              DCW      0x0000
                  |L1.224|
                          DCD      os_tmr
                  |L1.228|
                          DCD      m_tmr

                          AREA ||.data||, DATA, ALIGN=2

                  os_tmr
                          %        8
