; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -oled.o --asm_dir=.\ --list_dir=.\ --depend=led.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Software\Keil\ARM\CMSIS\Include -IC:\Software\Keil\ARM\INC\NXP\LPC17xx --omf_browse=led.crf src\LED.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LED_init PROC
;;;24      *----------------------------------------------------------------------------*/
;;;25     void LED_init (void) {
000000  4827              LDR      r0,|L1.160|
;;;26       LPC_GPIO1->FIODIR |= 0xB0000000;                 /* LEDs on PORT1  */
000002  6a00              LDR      r0,[r0,#0x20]
000004  f0404030          ORR      r0,r0,#0xb0000000
000008  4925              LDR      r1,|L1.160|
00000a  6208              STR      r0,[r1,#0x20]
;;;27       LPC_GPIO2->FIODIR |= 0x0000007C;                 /* LEDs on PORT2  */
00000c  4608              MOV      r0,r1
00000e  6c00              LDR      r0,[r0,#0x40]
000010  f040007c          ORR      r0,r0,#0x7c
000014  6408              STR      r0,[r1,#0x40]
;;;28     }
000016  4770              BX       lr
;;;29     
                          ENDP

                  LED_on PROC
;;;33      *----------------------------------------------------------------------------*/
;;;34     void LED_on  (int led) {
000018  4a22              LDR      r2,|L1.164|
;;;35       U32 mask;
;;;36     
;;;37       mask = 1 << led_pos[led];
00001a  5c13              LDRB     r3,[r2,r0]
00001c  f04f0201          MOV      r2,#1
000020  fa02f203          LSL      r2,r2,r3
000024  4611              MOV      r1,r2
;;;38       if (led < 3) LPC_GPIO1->FIOSET = mask;
000026  2803              CMP      r0,#3
000028  da02              BGE      |L1.48|
00002a  4a1d              LDR      r2,|L1.160|
00002c  6391              STR      r1,[r2,#0x38]
00002e  e001              B        |L1.52|
                  |L1.48|
;;;39       else         LPC_GPIO2->FIOSET = mask;
000030  4a1b              LDR      r2,|L1.160|
000032  6591              STR      r1,[r2,#0x58]
                  |L1.52|
;;;40     }
000034  4770              BX       lr
;;;41     
                          ENDP

                  LED_off PROC
;;;44      *----------------------------------------------------------------------------*/
;;;45     void LED_off (int led) {
000036  4a1b              LDR      r2,|L1.164|
;;;46       U32 mask;
;;;47     
;;;48       mask = 1 << led_pos[led];
000038  5c13              LDRB     r3,[r2,r0]
00003a  f04f0201          MOV      r2,#1
00003e  fa02f203          LSL      r2,r2,r3
000042  4611              MOV      r1,r2
;;;49       if (led < 3) LPC_GPIO1->FIOCLR = mask;
000044  2803              CMP      r0,#3
000046  da02              BGE      |L1.78|
000048  4a15              LDR      r2,|L1.160|
00004a  63d1              STR      r1,[r2,#0x3c]
00004c  e001              B        |L1.82|
                  |L1.78|
;;;50       else         LPC_GPIO2->FIOCLR = mask;
00004e  4a14              LDR      r2,|L1.160|
000050  65d1              STR      r1,[r2,#0x5c]
                  |L1.82|
;;;51     }
000052  4770              BX       lr
;;;52     
                          ENDP

                  LED_out PROC
;;;55      *----------------------------------------------------------------------------*/
;;;56     void LED_out (int led) {
000054  b510              PUSH     {r4,lr}
000056  4602              MOV      r2,r0
;;;57       int i;
;;;58       U32 mask;
;;;59     
;;;60       for (i = 0; i < LED_NUM; i++) {
000058  f04f0300          MOV      r3,#0
00005c  4618              MOV      r0,r3
00005e  e01b              B        |L1.152|
                  |L1.96|
;;;61         mask = 1 << led_pos[i];
000060  4b10              LDR      r3,|L1.164|
000062  5c1c              LDRB     r4,[r3,r0]
000064  f04f0301          MOV      r3,#1
000068  fa03f104          LSL      r1,r3,r4
;;;62         if (led & (1<<i)) {
00006c  fa03f300          LSL      r3,r3,r0
000070  4213              TST      r3,r2
000072  d007              BEQ      |L1.132|
;;;63           if (i < 3) LPC_GPIO1->FIOSET = mask;
000074  2803              CMP      r0,#3
000076  da02              BGE      |L1.126|
000078  4b09              LDR      r3,|L1.160|
00007a  6399              STR      r1,[r3,#0x38]
00007c  e009              B        |L1.146|
                  |L1.126|
;;;64           else       LPC_GPIO2->FIOSET = mask;
00007e  4b08              LDR      r3,|L1.160|
000080  6599              STR      r1,[r3,#0x58]
000082  e006              B        |L1.146|
                  |L1.132|
;;;65         }
;;;66         else {
;;;67           if (i < 3) LPC_GPIO1->FIOCLR = mask;
000084  2803              CMP      r0,#3
000086  da02              BGE      |L1.142|
000088  4b05              LDR      r3,|L1.160|
00008a  63d9              STR      r1,[r3,#0x3c]
00008c  e001              B        |L1.146|
                  |L1.142|
;;;68           else       LPC_GPIO2->FIOCLR = mask;
00008e  4b04              LDR      r3,|L1.160|
000090  65d9              STR      r1,[r3,#0x5c]
                  |L1.146|
000092  f1000301          ADD      r3,r0,#1              ;60
000096  4618              MOV      r0,r3                 ;60
                  |L1.152|
000098  2808              CMP      r0,#8                 ;60
00009a  dbe1              BLT      |L1.96|
;;;69         }
;;;70       }
;;;71     }
00009c  bd10              POP      {r4,pc}
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      0x2009c000
                  |L1.164|
                          DCD      led_pos

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  led_pos
000000  1c1d1f02          DCB      0x1c,0x1d,0x1f,0x02
000004  03040506          DCB      0x03,0x04,0x05,0x06

;*** Start embedded assembler ***

#line 1 "src\\LED.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_LED_c_led_pos____REV16|
#line 112 "C:\\Software\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_LED_c_led_pos____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_LED_c_led_pos____REVSH|
#line 130
|__asm___5_LED_c_led_pos____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
