; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -ort_list.o --asm_dir=.\ --list_dir=.\ --depend=rt_list.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Software\Keil\ARM\CMSIS\Include -IC:\Software\Keil\ARM\INC\NXP\LPC17xx --omf_browse=rt_list.crf rtx_src\rt_List.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rt_put_prio PROC
;;;36     
;;;37     void rt_put_prio (P_XCB p_CB, P_TCB p_task) {
000000  b530              PUSH     {r4,r5,lr}
000002  460a              MOV      r2,r1
;;;38       /* Put task identified with "p_task" into list ordered by priority.       */
;;;39       /* "p_CB" points to head of list; list has always an element at end with  */
;;;40       /* a priority less than "p_task->prio".                                   */
;;;41       P_TCB p_CB2;
;;;42       U32 prio;
;;;43       BOOL sem_mbx = __FALSE;
000004  f04f0500          MOV      r5,#0
000008  462c              MOV      r4,r5
;;;44     
;;;45       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
00000a  7805              LDRB     r5,[r0,#0]
00000c  2d02              CMP      r5,#2
00000e  d005              BEQ      |L1.28|
000010  7805              LDRB     r5,[r0,#0]
000012  2d01              CMP      r5,#1
000014  d002              BEQ      |L1.28|
000016  7805              LDRB     r5,[r0,#0]
000018  2d03              CMP      r5,#3
00001a  d102              BNE      |L1.34|
                  |L1.28|
;;;46         sem_mbx = __TRUE;
00001c  f04f0501          MOV      r5,#1
000020  462c              MOV      r4,r5
                  |L1.34|
;;;47       }
;;;48       prio = p_task->prio;
000022  7893              LDRB     r3,[r2,#2]
;;;49       p_CB2 = p_CB->p_lnk;
000024  6841              LDR      r1,[r0,#4]
;;;50       /* Search for an entry in the list */
;;;51       while (p_CB2 != NULL && prio <= p_CB2->prio) {
000026  e002              B        |L1.46|
                  |L1.40|
;;;52         p_CB = (P_XCB)p_CB2;
000028  4608              MOV      r0,r1
;;;53         p_CB2 = p_CB2->p_lnk;
00002a  684d              LDR      r5,[r1,#4]
00002c  4629              MOV      r1,r5
                  |L1.46|
00002e  b111              CBZ      r1,|L1.54|
000030  788d              LDRB     r5,[r1,#2]            ;51
000032  429d              CMP      r5,r3                 ;51
000034  d2f8              BCS      |L1.40|
                  |L1.54|
;;;54       }
;;;55       /* Entry found, insert the task into the list */
;;;56       p_task->p_lnk = p_CB2;
000036  6051              STR      r1,[r2,#4]
;;;57       p_CB->p_lnk = p_task;
000038  6042              STR      r2,[r0,#4]
;;;58       if (sem_mbx) {
00003a  b11c              CBZ      r4,|L1.68|
;;;59         if (p_CB2 != NULL) {
00003c  b101              CBZ      r1,|L1.64|
;;;60           p_CB2->p_rlnk = p_task;
00003e  608a              STR      r2,[r1,#8]
                  |L1.64|
;;;61         }
;;;62         p_task->p_rlnk = (P_TCB)p_CB;
000040  6090              STR      r0,[r2,#8]
000042  e002              B        |L1.74|
                  |L1.68|
;;;63       }
;;;64       else {
;;;65         p_task->p_rlnk = NULL;
000044  f04f0500          MOV      r5,#0
000048  6095              STR      r5,[r2,#8]
                  |L1.74|
;;;66       }
;;;67     }
00004a  bd30              POP      {r4,r5,pc}
;;;68     
                          ENDP

                  rt_get_first PROC
;;;71     
;;;72     P_TCB rt_get_first (P_XCB p_CB) {
00004c  4601              MOV      r1,r0
;;;73       /* Get task at head of list: it is the task with highest priority. */
;;;74       /* "p_CB" points to head of list. */
;;;75       P_TCB p_first;
;;;76     
;;;77       p_first = p_CB->p_lnk;
00004e  684a              LDR      r2,[r1,#4]
000050  4610              MOV      r0,r2
;;;78       p_CB->p_lnk = p_first->p_lnk;
000052  6842              LDR      r2,[r0,#4]
000054  604a              STR      r2,[r1,#4]
;;;79       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000056  780a              LDRB     r2,[r1,#0]
000058  2a02              CMP      r2,#2
00005a  d005              BEQ      |L1.104|
00005c  780a              LDRB     r2,[r1,#0]
00005e  2a01              CMP      r2,#1
000060  d002              BEQ      |L1.104|
000062  780a              LDRB     r2,[r1,#0]
000064  2a03              CMP      r2,#3
000066  d10a              BNE      |L1.126|
                  |L1.104|
;;;80         if (p_first->p_lnk != NULL) {
000068  6842              LDR      r2,[r0,#4]
00006a  b122              CBZ      r2,|L1.118|
;;;81           p_first->p_lnk->p_rlnk = (P_TCB)p_CB;
00006c  6842              LDR      r2,[r0,#4]
00006e  6091              STR      r1,[r2,#8]
;;;82           p_first->p_lnk = NULL;
000070  f04f0200          MOV      r2,#0
000074  6042              STR      r2,[r0,#4]
                  |L1.118|
;;;83         }
;;;84         p_first->p_rlnk = NULL;
000076  f04f0200          MOV      r2,#0
00007a  6082              STR      r2,[r0,#8]
00007c  e002              B        |L1.132|
                  |L1.126|
;;;85       }
;;;86       else {
;;;87         p_first->p_lnk = NULL;
00007e  f04f0200          MOV      r2,#0
000082  6042              STR      r2,[r0,#4]
                  |L1.132|
;;;88       }
;;;89       return (p_first);
;;;90     }
000084  4770              BX       lr
;;;91     
                          ENDP

                  rt_put_rdy_first PROC
;;;94     
;;;95     void rt_put_rdy_first (P_TCB p_task) {
000086  4990              LDR      r1,|L1.712|
;;;96       /* Put task identified with "p_task" at the head of the ready list. The   */
;;;97       /* task must have at least a priority equal to highest priority in list.  */
;;;98       p_task->p_lnk = os_rdy.p_lnk;
000088  6849              LDR      r1,[r1,#4]  ; os_rdy
00008a  6041              STR      r1,[r0,#4]
;;;99       p_task->p_rlnk = NULL;
00008c  f04f0100          MOV      r1,#0
000090  6081              STR      r1,[r0,#8]
;;;100      os_rdy.p_lnk = p_task;
000092  498d              LDR      r1,|L1.712|
000094  6048              STR      r0,[r1,#4]  ; os_rdy
;;;101    }
000096  4770              BX       lr
;;;102    
                          ENDP

                  rt_get_same_rdy_prio PROC
;;;105    
;;;106    P_TCB rt_get_same_rdy_prio (void) {
000098  488b              LDR      r0,|L1.712|
;;;107      /* Remove a task of same priority from ready list if any exists. Other-   */
;;;108      /* wise return NULL.                                                      */
;;;109      P_TCB p_first;
;;;110    
;;;111      p_first = os_rdy.p_lnk;
00009a  6840              LDR      r0,[r0,#4]  ; os_rdy
00009c  4601              MOV      r1,r0
;;;112      if (p_first->prio == os_tsk.run->prio) {
00009e  7888              LDRB     r0,[r1,#2]
0000a0  4a8a              LDR      r2,|L1.716|
0000a2  6812              LDR      r2,[r2,#0]  ; os_tsk
0000a4  7892              LDRB     r2,[r2,#2]
0000a6  4290              CMP      r0,r2
0000a8  d106              BNE      |L1.184|
;;;113        os_rdy.p_lnk = os_rdy.p_lnk->p_lnk;
0000aa  4887              LDR      r0,|L1.712|
0000ac  6840              LDR      r0,[r0,#4]  ; os_rdy
0000ae  6840              LDR      r0,[r0,#4]
0000b0  4a85              LDR      r2,|L1.712|
0000b2  6050              STR      r0,[r2,#4]  ; os_rdy
;;;114        return (p_first);
0000b4  4608              MOV      r0,r1
                  |L1.182|
;;;115      }
;;;116      return (NULL);
;;;117    }
0000b6  4770              BX       lr
                  |L1.184|
0000b8  2000              MOVS     r0,#0                 ;116
0000ba  e7fc              B        |L1.182|
;;;118    
                          ENDP

                  rt_rmv_list PROC
;;;226    
;;;227    void rt_rmv_list (P_TCB p_task) {
0000bc  6882              LDR      r2,[r0,#8]
;;;228      /* Remove task identified with "p_task" from ready, semaphore or mailbox  */
;;;229      /* waiting list if enqueued.                                              */
;;;230      P_TCB p_b;
;;;231    
;;;232      if (p_task->p_rlnk != NULL) {
0000be  b142              CBZ      r2,|L1.210|
;;;233        /* A task is enqueued in semaphore / mailbox waiting list. */
;;;234        p_task->p_rlnk->p_lnk = p_task->p_lnk;
0000c0  e9d02301          LDRD     r2,r3,[r0,#4]
0000c4  605a              STR      r2,[r3,#4]
;;;235        if (p_task->p_lnk != NULL) {
0000c6  6842              LDR      r2,[r0,#4]
0000c8  b112              CBZ      r2,|L1.208|
;;;236          p_task->p_lnk->p_rlnk = p_task->p_rlnk;
0000ca  e9d03201          LDRD     r3,r2,[r0,#4]
0000ce  609a              STR      r2,[r3,#8]
                  |L1.208|
;;;237        }
;;;238        return;
;;;239      }
;;;240    
;;;241      p_b = (P_TCB)&os_rdy;
;;;242      while (p_b != NULL) {
;;;243        /* Search the ready list for task "p_task" */
;;;244        if (p_b->p_lnk == p_task) {
;;;245          p_b->p_lnk = p_task->p_lnk;
;;;246          return;
;;;247        }
;;;248        p_b = p_b->p_lnk;
;;;249      }
;;;250    }
0000d0  4770              BX       lr
                  |L1.210|
0000d2  497d              LDR      r1,|L1.712|
0000d4  e007              B        |L1.230|
                  |L1.214|
0000d6  684a              LDR      r2,[r1,#4]            ;244
0000d8  4282              CMP      r2,r0                 ;244
0000da  d102              BNE      |L1.226|
0000dc  6842              LDR      r2,[r0,#4]            ;245
0000de  604a              STR      r2,[r1,#4]            ;245
0000e0  e7f6              B        |L1.208|
                  |L1.226|
0000e2  684a              LDR      r2,[r1,#4]            ;248
0000e4  4611              MOV      r1,r2                 ;248
                  |L1.230|
0000e6  2900              CMP      r1,#0                 ;242
0000e8  d1f5              BNE      |L1.214|
0000ea  bf00              NOP      
0000ec  e7f0              B        |L1.208|
;;;251    
                          ENDP

                  rt_resort_prio PROC
;;;121    
;;;122    void rt_resort_prio (P_TCB p_task) {
0000ee  b530              PUSH     {r4,r5,lr}
0000f0  4605              MOV      r5,r0
;;;123      /* Re-sort ordered lists after the priority of 'p_task' has changed.      */
;;;124      P_TCB p_CB;
;;;125    
;;;126      if (p_task->p_rlnk == NULL) {
0000f2  68a8              LDR      r0,[r5,#8]
0000f4  b920              CBNZ     r0,|L1.256|
;;;127        if (p_task->state == READY) {
0000f6  7868              LDRB     r0,[r5,#1]
0000f8  2801              CMP      r0,#1
0000fa  d110              BNE      |L1.286|
;;;128          /* Task is chained into READY list. */
;;;129          p_CB = (P_TCB)&os_rdy;
0000fc  4c72              LDR      r4,|L1.712|
;;;130          goto res;
0000fe  e007              B        |L1.272|
                  |L1.256|
;;;131        }
;;;132      }
;;;133      else {
;;;134        p_CB = p_task->p_rlnk;
000100  68ac              LDR      r4,[r5,#8]
;;;135        while (p_CB->cb_type == TCB) {
000102  e001              B        |L1.264|
                  |L1.260|
;;;136          /* Find a header of this task chain list. */
;;;137          p_CB = p_CB->p_rlnk;
000104  68a0              LDR      r0,[r4,#8]
000106  4604              MOV      r4,r0
                  |L1.264|
000108  7820              LDRB     r0,[r4,#0]            ;135
00010a  2800              CMP      r0,#0                 ;135
00010c  d0fa              BEQ      |L1.260|
;;;138        }
;;;139    res:rt_rmv_list (p_task);
00010e  bf00              NOP      
                  |L1.272|
000110  4628              MOV      r0,r5
000112  f7fffffe          BL       rt_rmv_list
;;;140        rt_put_prio ((P_XCB)p_CB, p_task);
000116  4629              MOV      r1,r5
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       rt_put_prio
                  |L1.286|
;;;141      }
;;;142    }
00011e  bd30              POP      {r4,r5,pc}
;;;143    
                          ENDP

                  rt_put_dly PROC
;;;146    
;;;147    void rt_put_dly (P_TCB p_task, U16 delay) {
000120  b570              PUSH     {r4-r6,lr}
000122  460c              MOV      r4,r1
;;;148      /* Put a task identified with "p_task" into chained delay wait list using */
;;;149      /* a delay value of "delay".                                              */
;;;150      P_TCB p;
;;;151      U32 delta,idelay = delay;
000124  4623              MOV      r3,r4
;;;152    
;;;153      p = (P_TCB)&os_dly;
000126  4d6a              LDR      r5,|L1.720|
000128  4629              MOV      r1,r5
;;;154      if (p->p_dlnk == NULL) {
00012a  68cd              LDR      r5,[r1,#0xc]
00012c  b915              CBNZ     r5,|L1.308|
;;;155        /* Delay list empty */
;;;156        delta = 0;
00012e  f04f0200          MOV      r2,#0
;;;157        goto last;
000132  e005              B        |L1.320|
                  |L1.308|
;;;158      }
;;;159      delta = os_dly.delta_time;
000134  4d66              LDR      r5,|L1.720|
000136  8aaa              LDRH     r2,[r5,#0x14]  ; os_dly
;;;160      while (delta < idelay) {
000138  e013              B        |L1.354|
                  |L1.314|
;;;161        if (p->p_dlnk == NULL) {
00013a  68cd              LDR      r5,[r1,#0xc]
00013c  b965              CBNZ     r5,|L1.344|
;;;162          /* End of list found */
;;;163    last: p_task->p_dlnk = NULL;
00013e  bf00              NOP      
                  |L1.320|
000140  f04f0500          MOV      r5,#0
000144  60c5              STR      r5,[r0,#0xc]
;;;164          p->p_dlnk = p_task;
000146  60c8              STR      r0,[r1,#0xc]
;;;165          p_task->p_blnk = p;
000148  6101              STR      r1,[r0,#0x10]
;;;166          p->delta_time = (U16)(idelay - delta);
00014a  eba30502          SUB      r5,r3,r2
00014e  828d              STRH     r5,[r1,#0x14]
;;;167          p_task->delta_time = 0;
000150  f04f0500          MOV      r5,#0
000154  8285              STRH     r5,[r0,#0x14]
                  |L1.342|
;;;168          return;
;;;169        }
;;;170        p = p->p_dlnk;
;;;171        delta += p->delta_time;
;;;172      }
;;;173      /* Right place found */
;;;174      p_task->p_dlnk = p->p_dlnk;
;;;175      p->p_dlnk = p_task;
;;;176      p_task->p_blnk = p;
;;;177      if (p_task->p_dlnk != NULL) {
;;;178        p_task->p_dlnk->p_blnk = p_task;
;;;179      }
;;;180      p_task->delta_time = (U16)(delta - idelay);
;;;181      p->delta_time -= p_task->delta_time;
;;;182    }
000156  bd70              POP      {r4-r6,pc}
                  |L1.344|
000158  68cd              LDR      r5,[r1,#0xc]          ;170
00015a  4629              MOV      r1,r5                 ;170
00015c  8a8d              LDRH     r5,[r1,#0x14]         ;171
00015e  4415              ADD      r5,r5,r2              ;171
000160  462a              MOV      r2,r5                 ;171
                  |L1.354|
000162  429a              CMP      r2,r3                 ;160
000164  d3e9              BCC      |L1.314|
000166  68cd              LDR      r5,[r1,#0xc]          ;174
000168  60c5              STR      r5,[r0,#0xc]          ;174
00016a  60c8              STR      r0,[r1,#0xc]          ;175
00016c  6101              STR      r1,[r0,#0x10]         ;176
00016e  68c5              LDR      r5,[r0,#0xc]          ;177
000170  b10d              CBZ      r5,|L1.374|
000172  68c5              LDR      r5,[r0,#0xc]          ;178
000174  6128              STR      r0,[r5,#0x10]         ;178
                  |L1.374|
000176  eba20503          SUB      r5,r2,r3              ;180
00017a  8285              STRH     r5,[r0,#0x14]         ;180
00017c  8a8d              LDRH     r5,[r1,#0x14]         ;181
00017e  8a86              LDRH     r6,[r0,#0x14]         ;181
000180  eba50506          SUB      r5,r5,r6              ;181
000184  828d              STRH     r5,[r1,#0x14]         ;181
000186  bf00              NOP      
000188  e7e5              B        |L1.342|
;;;183    
                          ENDP

                  rt_dec_dly PROC
;;;186    
;;;187    void rt_dec_dly (void) {
00018a  b510              PUSH     {r4,lr}
;;;188      /* Decrement delta time of list head: remove tasks having a value of zero.*/
;;;189      P_TCB p_rdy;
;;;190    
;;;191      if (os_dly.p_dlnk == NULL) {
00018c  4850              LDR      r0,|L1.720|
00018e  68c0              LDR      r0,[r0,#0xc]  ; os_dly
000190  b900              CBNZ     r0,|L1.404|
                  |L1.402|
;;;192        return;
;;;193      }
;;;194      os_dly.delta_time--;
;;;195      while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
;;;196        p_rdy = os_dly.p_dlnk;
;;;197        if (p_rdy->p_rlnk != NULL) {
;;;198          /* Task is really enqueued, remove task from semaphore/mailbox */
;;;199          /* timeout waiting list. */
;;;200          p_rdy->p_rlnk->p_lnk = p_rdy->p_lnk;
;;;201          if (p_rdy->p_lnk != NULL) {
;;;202            p_rdy->p_lnk->p_rlnk = p_rdy->p_rlnk;
;;;203            p_rdy->p_lnk = NULL;
;;;204          }
;;;205          p_rdy->p_rlnk = NULL;
;;;206        }
;;;207        rt_put_prio (&os_rdy, p_rdy);
;;;208        os_dly.delta_time = p_rdy->delta_time;
;;;209        if (p_rdy->state == WAIT_ITV) {
;;;210          /* Calculate the next time for interval wait. */
;;;211          p_rdy->delta_time = p_rdy->interval_time + os_time;
;;;212        }
;;;213        p_rdy->state   = READY;
;;;214        p_rdy->ret_val = OS_R_TMO;
;;;215        os_dly.p_dlnk = p_rdy->p_dlnk;
;;;216        if (p_rdy->p_dlnk != NULL) {
;;;217          p_rdy->p_dlnk->p_blnk =  (P_TCB)&os_dly;
;;;218          p_rdy->p_dlnk = NULL;
;;;219        }
;;;220        p_rdy->p_blnk = NULL;
;;;221      }
;;;222    }
000192  bd10              POP      {r4,pc}
                  |L1.404|
000194  484e              LDR      r0,|L1.720|
000196  8a80              LDRH     r0,[r0,#0x14]         ;194  ; os_dly
000198  f1a00001          SUB      r0,r0,#1              ;194
00019c  494c              LDR      r1,|L1.720|
00019e  8288              STRH     r0,[r1,#0x14]         ;194
0001a0  e033              B        |L1.522|
                  |L1.418|
0001a2  484b              LDR      r0,|L1.720|
0001a4  68c4              LDR      r4,[r0,#0xc]          ;196  ; os_dly
0001a6  68a0              LDR      r0,[r4,#8]            ;197
0001a8  b168              CBZ      r0,|L1.454|
0001aa  e9d40101          LDRD     r0,r1,[r4,#4]         ;200
0001ae  6048              STR      r0,[r1,#4]            ;200
0001b0  6860              LDR      r0,[r4,#4]            ;201
0001b2  b128              CBZ      r0,|L1.448|
0001b4  e9d41001          LDRD     r1,r0,[r4,#4]         ;202
0001b8  6088              STR      r0,[r1,#8]            ;202
0001ba  f04f0000          MOV      r0,#0                 ;203
0001be  6060              STR      r0,[r4,#4]            ;203
                  |L1.448|
0001c0  f04f0000          MOV      r0,#0                 ;205
0001c4  60a0              STR      r0,[r4,#8]            ;205
                  |L1.454|
0001c6  4621              MOV      r1,r4                 ;207
0001c8  483f              LDR      r0,|L1.712|
0001ca  f7fffffe          BL       rt_put_prio
0001ce  8aa0              LDRH     r0,[r4,#0x14]         ;208
0001d0  493f              LDR      r1,|L1.720|
0001d2  8288              STRH     r0,[r1,#0x14]         ;208
0001d4  7860              LDRB     r0,[r4,#1]            ;209
0001d6  2804              CMP      r0,#4                 ;209
0001d8  d104              BNE      |L1.484|
0001da  8ae0              LDRH     r0,[r4,#0x16]         ;211
0001dc  493d              LDR      r1,|L1.724|
0001de  8809              LDRH     r1,[r1,#0]            ;211  ; os_time
0001e0  4408              ADD      r0,r0,r1              ;211
0001e2  82a0              STRH     r0,[r4,#0x14]         ;211
                  |L1.484|
0001e4  f04f0001          MOV      r0,#1                 ;213
0001e8  7060              STRB     r0,[r4,#1]            ;213
0001ea  f8840020          STRB     r0,[r4,#0x20]         ;214
0001ee  4938              LDR      r1,|L1.720|
0001f0  68e0              LDR      r0,[r4,#0xc]          ;215
0001f2  60c8              STR      r0,[r1,#0xc]          ;215  ; os_dly
0001f4  68e0              LDR      r0,[r4,#0xc]          ;216
0001f6  b128              CBZ      r0,|L1.516|
0001f8  4608              MOV      r0,r1                 ;217
0001fa  68e1              LDR      r1,[r4,#0xc]          ;217
0001fc  6108              STR      r0,[r1,#0x10]         ;217
0001fe  f04f0000          MOV      r0,#0                 ;218
000202  60e0              STR      r0,[r4,#0xc]          ;218
                  |L1.516|
000204  f04f0000          MOV      r0,#0                 ;220
000208  6120              STR      r0,[r4,#0x10]         ;220
                  |L1.522|
00020a  4831              LDR      r0,|L1.720|
00020c  8a80              LDRH     r0,[r0,#0x14]         ;195  ; os_dly
00020e  b918              CBNZ     r0,|L1.536|
000210  482f              LDR      r0,|L1.720|
000212  68c0              LDR      r0,[r0,#0xc]          ;195  ; os_dly
000214  2800              CMP      r0,#0                 ;195
000216  d1c4              BNE      |L1.418|
                  |L1.536|
000218  bf00              NOP      
00021a  e7ba              B        |L1.402|
;;;223    
                          ENDP

                  rt_rmv_dly PROC
;;;254    
;;;255    void rt_rmv_dly (P_TCB p_task) {
00021c  6902              LDR      r2,[r0,#0x10]
;;;256      /* Remove task identified with "p_task" from delay list if enqueued.      */
;;;257      P_TCB p_b;
;;;258    
;;;259      p_b = p_task->p_blnk;
00021e  4611              MOV      r1,r2
;;;260      if (p_b != NULL) {
000220  b199              CBZ      r1,|L1.586|
;;;261        /* Task is really enqueued */
;;;262        p_b->p_dlnk = p_task->p_dlnk;
000222  68c2              LDR      r2,[r0,#0xc]
000224  60ca              STR      r2,[r1,#0xc]
;;;263        if (p_task->p_dlnk != NULL) {
000226  68c2              LDR      r2,[r0,#0xc]
000228  b14a              CBZ      r2,|L1.574|
;;;264          /* 'p_task' is in the middle of list */
;;;265          p_b->delta_time += p_task->delta_time;
00022a  8a8a              LDRH     r2,[r1,#0x14]
00022c  8a83              LDRH     r3,[r0,#0x14]
00022e  441a              ADD      r2,r2,r3
000230  828a              STRH     r2,[r1,#0x14]
;;;266          p_task->p_dlnk->p_blnk = p_b;
000232  68c2              LDR      r2,[r0,#0xc]
000234  6111              STR      r1,[r2,#0x10]
;;;267          p_task->p_dlnk = NULL;
000236  f04f0200          MOV      r2,#0
00023a  60c2              STR      r2,[r0,#0xc]
00023c  e002              B        |L1.580|
                  |L1.574|
;;;268        }
;;;269        else {
;;;270          /* 'p_task' is at the end of list */
;;;271          p_b->delta_time = 0;
00023e  f04f0200          MOV      r2,#0
000242  828a              STRH     r2,[r1,#0x14]
                  |L1.580|
;;;272        }
;;;273        p_task->p_blnk = NULL;
000244  f04f0200          MOV      r2,#0
000248  6102              STR      r2,[r0,#0x10]
                  |L1.586|
;;;274      }
;;;275    }
00024a  4770              BX       lr
;;;276    
                          ENDP

                  rt_psq_enq PROC
;;;279    
;;;280    void rt_psq_enq (OS_ID entry, U32 arg) {
00024c  e92d41f0          PUSH     {r4-r8,lr}
000250  4605              MOV      r5,r0
000252  460e              MOV      r6,r1
;;;281      /* Insert post service request "entry" into ps-queue. */
;;;282      U32 idx;
;;;283    
;;;284      idx = rt_inc_qi (os_psq->size, &os_psq->count, &os_psq->first);
000254  4b20              LDR      r3,|L1.728|
000256  78d8              LDRB     r0,[r3,#3]  ; os_fifo
000258  f1030102          ADD      r1,r3,#2
00025c  461a              MOV      r2,r3
00025e  bf00              NOP      
000260  bf00              NOP      
                  |L1.610|
000262  e8d13f4f          LDREXB   r3,[r1]
000266  4283              CMP      r3,r0
000268  d102              BNE      |L1.624|
00026a  f3bf8f2f          CLREX    
00026e  e018              B        |L1.674|
                  |L1.624|
000270  f1030c01          ADD      r12,r3,#1
000274  e8c1cf48          STREXB   r8,r12,[r1]
000278  f1b80f00          CMP      r8,#0
00027c  d1f1              BNE      |L1.610|
00027e  bf00              NOP      
                  |L1.640|
000280  e8d2cf4f          LDREXB   r12,[r2]
000284  4663              MOV      r3,r12
000286  f10c0c01          ADD      r12,r12,#1
00028a  4667              MOV      r7,r12
00028c  4287              CMP      r7,r0
00028e  d102              BNE      |L1.662|
000290  f04f0c00          MOV      r12,#0
000294  4667              MOV      r7,r12
                  |L1.662|
000296  e8c27f4c          STREXB   r12,r7,[r2]
00029a  f1bc0f00          CMP      r12,#0
00029e  d1ef              BNE      |L1.640|
0002a0  bf00              NOP      
                  |L1.674|
0002a2  461c              MOV      r4,r3
;;;285      if (idx < os_psq->size) {
0002a4  480c              LDR      r0,|L1.728|
0002a6  78c0              LDRB     r0,[r0,#3]  ; os_fifo
0002a8  42a0              CMP      r0,r4
0002aa  d907              BLS      |L1.700|
;;;286        os_psq->q[idx].id  = entry;
0002ac  480a              LDR      r0,|L1.728|
0002ae  1d00              ADDS     r0,r0,#4
0002b0  f8405034          STR      r5,[r0,r4,LSL #3]
;;;287        os_psq->q[idx].arg = arg;
0002b4  eb0000c4          ADD      r0,r0,r4,LSL #3
0002b8  6046              STR      r6,[r0,#4]
0002ba  e002              B        |L1.706|
                  |L1.700|
;;;288      }
;;;289      else {
;;;290        os_error (OS_ERR_FIFO_OVF);
0002bc  2002              MOVS     r0,#2
0002be  f7fffffe          BL       os_error
                  |L1.706|
;;;291      }
;;;292    }
0002c2  e8bd81f0          POP      {r4-r8,pc}
;;;293    
                          ENDP

0002c6  0000              DCW      0x0000
                  |L1.712|
                          DCD      os_rdy
                  |L1.716|
                          DCD      os_tsk
                  |L1.720|
                          DCD      os_dly
                  |L1.724|
                          DCD      os_time
                  |L1.728|
                          DCD      os_fifo

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  os_rdy
                          %        24
                  os_dly
                          %        24
